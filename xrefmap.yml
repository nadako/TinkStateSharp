### YamlMime:XRefMap
sorted: true
references:
- uid: TinkState
  name: TinkState
  href: api/TinkState.html
  commentId: N:TinkState
  fullName: TinkState
  nameWithType: TinkState
- uid: TinkState.AsyncComputeResult`1
  name: AsyncComputeResult<T>
  href: api/TinkState.AsyncComputeResult-1.html
  commentId: T:TinkState.AsyncComputeResult`1
  name.vb: AsyncComputeResult(Of T)
  fullName: TinkState.AsyncComputeResult<T>
  fullName.vb: TinkState.AsyncComputeResult(Of T)
  nameWithType: AsyncComputeResult<T>
  nameWithType.vb: AsyncComputeResult(Of T)
- uid: TinkState.AsyncComputeResult`1.CreateDone(`0)
  name: CreateDone(T)
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_CreateDone__0_
  commentId: M:TinkState.AsyncComputeResult`1.CreateDone(`0)
  fullName: TinkState.AsyncComputeResult<T>.CreateDone(T)
  fullName.vb: TinkState.AsyncComputeResult(Of T).CreateDone(T)
  nameWithType: AsyncComputeResult<T>.CreateDone(T)
  nameWithType.vb: AsyncComputeResult(Of T).CreateDone(T)
- uid: TinkState.AsyncComputeResult`1.CreateDone*
  name: CreateDone
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_CreateDone_
  commentId: Overload:TinkState.AsyncComputeResult`1.CreateDone
  isSpec: "True"
  fullName: TinkState.AsyncComputeResult<T>.CreateDone
  fullName.vb: TinkState.AsyncComputeResult(Of T).CreateDone
  nameWithType: AsyncComputeResult<T>.CreateDone
  nameWithType.vb: AsyncComputeResult(Of T).CreateDone
- uid: TinkState.AsyncComputeResult`1.CreateFailed(System.Exception)
  name: CreateFailed(Exception)
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_CreateFailed_System_Exception_
  commentId: M:TinkState.AsyncComputeResult`1.CreateFailed(System.Exception)
  fullName: TinkState.AsyncComputeResult<T>.CreateFailed(System.Exception)
  fullName.vb: TinkState.AsyncComputeResult(Of T).CreateFailed(System.Exception)
  nameWithType: AsyncComputeResult<T>.CreateFailed(Exception)
  nameWithType.vb: AsyncComputeResult(Of T).CreateFailed(Exception)
- uid: TinkState.AsyncComputeResult`1.CreateFailed*
  name: CreateFailed
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_CreateFailed_
  commentId: Overload:TinkState.AsyncComputeResult`1.CreateFailed
  isSpec: "True"
  fullName: TinkState.AsyncComputeResult<T>.CreateFailed
  fullName.vb: TinkState.AsyncComputeResult(Of T).CreateFailed
  nameWithType: AsyncComputeResult<T>.CreateFailed
  nameWithType.vb: AsyncComputeResult(Of T).CreateFailed
- uid: TinkState.AsyncComputeResult`1.CreateLoading
  name: CreateLoading()
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_CreateLoading
  commentId: M:TinkState.AsyncComputeResult`1.CreateLoading
  fullName: TinkState.AsyncComputeResult<T>.CreateLoading()
  fullName.vb: TinkState.AsyncComputeResult(Of T).CreateLoading()
  nameWithType: AsyncComputeResult<T>.CreateLoading()
  nameWithType.vb: AsyncComputeResult(Of T).CreateLoading()
- uid: TinkState.AsyncComputeResult`1.CreateLoading*
  name: CreateLoading
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_CreateLoading_
  commentId: Overload:TinkState.AsyncComputeResult`1.CreateLoading
  isSpec: "True"
  fullName: TinkState.AsyncComputeResult<T>.CreateLoading
  fullName.vb: TinkState.AsyncComputeResult(Of T).CreateLoading
  nameWithType: AsyncComputeResult<T>.CreateLoading
  nameWithType.vb: AsyncComputeResult(Of T).CreateLoading
- uid: TinkState.AsyncComputeResult`1.Exception
  name: Exception
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_Exception
  commentId: F:TinkState.AsyncComputeResult`1.Exception
  fullName: TinkState.AsyncComputeResult<T>.Exception
  fullName.vb: TinkState.AsyncComputeResult(Of T).Exception
  nameWithType: AsyncComputeResult<T>.Exception
  nameWithType.vb: AsyncComputeResult(Of T).Exception
- uid: TinkState.AsyncComputeResult`1.Map*
  name: Map
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_Map_
  commentId: Overload:TinkState.AsyncComputeResult`1.Map
  isSpec: "True"
  fullName: TinkState.AsyncComputeResult<T>.Map
  fullName.vb: TinkState.AsyncComputeResult(Of T).Map
  nameWithType: AsyncComputeResult<T>.Map
  nameWithType.vb: AsyncComputeResult(Of T).Map
- uid: TinkState.AsyncComputeResult`1.Map``1(System.Func{`0,``0})
  name: Map<TOut>(Func<T, TOut>)
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_Map__1_System_Func__0___0__
  commentId: M:TinkState.AsyncComputeResult`1.Map``1(System.Func{`0,``0})
  name.vb: Map(Of TOut)(Func(Of T, TOut))
  fullName: TinkState.AsyncComputeResult<T>.Map<TOut>(System.Func<T, TOut>)
  fullName.vb: TinkState.AsyncComputeResult(Of T).Map(Of TOut)(System.Func(Of T, TOut))
  nameWithType: AsyncComputeResult<T>.Map<TOut>(Func<T, TOut>)
  nameWithType.vb: AsyncComputeResult(Of T).Map(Of TOut)(Func(Of T, TOut))
- uid: TinkState.AsyncComputeResult`1.Result
  name: Result
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_Result
  commentId: F:TinkState.AsyncComputeResult`1.Result
  fullName: TinkState.AsyncComputeResult<T>.Result
  fullName.vb: TinkState.AsyncComputeResult(Of T).Result
  nameWithType: AsyncComputeResult<T>.Result
  nameWithType.vb: AsyncComputeResult(Of T).Result
- uid: TinkState.AsyncComputeResult`1.Status
  name: Status
  href: api/TinkState.AsyncComputeResult-1.html#TinkState_AsyncComputeResult_1_Status
  commentId: F:TinkState.AsyncComputeResult`1.Status
  fullName: TinkState.AsyncComputeResult<T>.Status
  fullName.vb: TinkState.AsyncComputeResult(Of T).Status
  nameWithType: AsyncComputeResult<T>.Status
  nameWithType.vb: AsyncComputeResult(Of T).Status
- uid: TinkState.AsyncComputeStatus
  name: AsyncComputeStatus
  href: api/TinkState.AsyncComputeStatus.html
  commentId: T:TinkState.AsyncComputeStatus
  fullName: TinkState.AsyncComputeStatus
  nameWithType: AsyncComputeStatus
- uid: TinkState.AsyncComputeStatus.Done
  name: Done
  href: api/TinkState.AsyncComputeStatus.html#TinkState_AsyncComputeStatus_Done
  commentId: F:TinkState.AsyncComputeStatus.Done
  fullName: TinkState.AsyncComputeStatus.Done
  nameWithType: AsyncComputeStatus.Done
- uid: TinkState.AsyncComputeStatus.Failed
  name: Failed
  href: api/TinkState.AsyncComputeStatus.html#TinkState_AsyncComputeStatus_Failed
  commentId: F:TinkState.AsyncComputeStatus.Failed
  fullName: TinkState.AsyncComputeStatus.Failed
  nameWithType: AsyncComputeStatus.Failed
- uid: TinkState.AsyncComputeStatus.Loading
  name: Loading
  href: api/TinkState.AsyncComputeStatus.html#TinkState_AsyncComputeStatus_Loading
  commentId: F:TinkState.AsyncComputeStatus.Loading
  fullName: TinkState.AsyncComputeStatus.Loading
  nameWithType: AsyncComputeStatus.Loading
- uid: TinkState.AsyncComputeTask`1
  name: AsyncComputeTask<T>
  href: api/TinkState.AsyncComputeTask-1.html
  commentId: T:TinkState.AsyncComputeTask`1
  name.vb: AsyncComputeTask(Of T)
  fullName: TinkState.AsyncComputeTask<T>
  fullName.vb: TinkState.AsyncComputeTask(Of T)
  nameWithType: AsyncComputeTask<T>
  nameWithType.vb: AsyncComputeTask(Of T)
- uid: TinkState.Observable
  name: Observable
  href: api/TinkState.Observable.html
  commentId: T:TinkState.Observable
  fullName: TinkState.Observable
  nameWithType: Observable
- uid: TinkState.Observable.Auto*
  name: Auto
  href: api/TinkState.Observable.html#TinkState_Observable_Auto_
  commentId: Overload:TinkState.Observable.Auto
  isSpec: "True"
  fullName: TinkState.Observable.Auto
  nameWithType: Observable.Auto
- uid: TinkState.Observable.Auto``1(System.Func{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Auto<T>(Func<T>, IEqualityComparer<T>)
  href: api/TinkState.Observable.html#TinkState_Observable_Auto__1_System_Func___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:TinkState.Observable.Auto``1(System.Func{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Auto(Of T)(Func(Of T), IEqualityComparer(Of T))
  fullName: TinkState.Observable.Auto<T>(System.Func<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: TinkState.Observable.Auto(Of T)(System.Func(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Observable.Auto<T>(Func<T>, IEqualityComparer<T>)
  nameWithType.vb: Observable.Auto(Of T)(Func(Of T), IEqualityComparer(Of T))
- uid: TinkState.Observable.Auto``1(System.Func{TinkState.AsyncComputeTask{``0}})
  name: Auto<T>(Func<AsyncComputeTask<T>>)
  href: api/TinkState.Observable.html#TinkState_Observable_Auto__1_System_Func_TinkState_AsyncComputeTask___0___
  commentId: M:TinkState.Observable.Auto``1(System.Func{TinkState.AsyncComputeTask{``0}})
  name.vb: Auto(Of T)(Func(Of AsyncComputeTask(Of T)))
  fullName: TinkState.Observable.Auto<T>(System.Func<TinkState.AsyncComputeTask<T>>)
  fullName.vb: TinkState.Observable.Auto(Of T)(System.Func(Of TinkState.AsyncComputeTask(Of T)))
  nameWithType: Observable.Auto<T>(Func<AsyncComputeTask<T>>)
  nameWithType.vb: Observable.Auto(Of T)(Func(Of AsyncComputeTask(Of T)))
- uid: TinkState.Observable.AutoRun(System.Action,TinkState.Scheduler)
  name: AutoRun(Action, Scheduler)
  href: api/TinkState.Observable.html#TinkState_Observable_AutoRun_System_Action_TinkState_Scheduler_
  commentId: M:TinkState.Observable.AutoRun(System.Action,TinkState.Scheduler)
  fullName: TinkState.Observable.AutoRun(System.Action, TinkState.Scheduler)
  nameWithType: Observable.AutoRun(Action, Scheduler)
- uid: TinkState.Observable.AutoRun*
  name: AutoRun
  href: api/TinkState.Observable.html#TinkState_Observable_AutoRun_
  commentId: Overload:TinkState.Observable.AutoRun
  isSpec: "True"
  fullName: TinkState.Observable.AutoRun
  nameWithType: Observable.AutoRun
- uid: TinkState.Observable.Const*
  name: Const
  href: api/TinkState.Observable.html#TinkState_Observable_Const_
  commentId: Overload:TinkState.Observable.Const
  isSpec: "True"
  fullName: TinkState.Observable.Const
  nameWithType: Observable.Const
- uid: TinkState.Observable.Const``1(``0)
  name: Const<T>(T)
  href: api/TinkState.Observable.html#TinkState_Observable_Const__1___0_
  commentId: M:TinkState.Observable.Const``1(``0)
  name.vb: Const(Of T)(T)
  fullName: TinkState.Observable.Const<T>(T)
  fullName.vb: TinkState.Observable.Const(Of T)(T)
  nameWithType: Observable.Const<T>(T)
  nameWithType.vb: Observable.Const(Of T)(T)
- uid: TinkState.Observable.Dictionary*
  name: Dictionary
  href: api/TinkState.Observable.html#TinkState_Observable_Dictionary_
  commentId: Overload:TinkState.Observable.Dictionary
  isSpec: "True"
  fullName: TinkState.Observable.Dictionary
  nameWithType: Observable.Dictionary
- uid: TinkState.Observable.Dictionary``2
  name: Dictionary<TKey, TValue>()
  href: api/TinkState.Observable.html#TinkState_Observable_Dictionary__2
  commentId: M:TinkState.Observable.Dictionary``2
  name.vb: Dictionary(Of TKey, TValue)()
  fullName: TinkState.Observable.Dictionary<TKey, TValue>()
  fullName.vb: TinkState.Observable.Dictionary(Of TKey, TValue)()
  nameWithType: Observable.Dictionary<TKey, TValue>()
  nameWithType.vb: Observable.Dictionary(Of TKey, TValue)()
- uid: TinkState.Observable.List*
  name: List
  href: api/TinkState.Observable.html#TinkState_Observable_List_
  commentId: Overload:TinkState.Observable.List
  isSpec: "True"
  fullName: TinkState.Observable.List
  nameWithType: Observable.List
- uid: TinkState.Observable.List``1
  name: List<T>()
  href: api/TinkState.Observable.html#TinkState_Observable_List__1
  commentId: M:TinkState.Observable.List``1
  name.vb: List(Of T)()
  fullName: TinkState.Observable.List<T>()
  fullName.vb: TinkState.Observable.List(Of T)()
  nameWithType: Observable.List<T>()
  nameWithType.vb: Observable.List(Of T)()
- uid: TinkState.Observable.List``1(System.Collections.Generic.IEnumerable{``0})
  name: List<T>(IEnumerable<T>)
  href: api/TinkState.Observable.html#TinkState_Observable_List__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:TinkState.Observable.List``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: List(Of T)(IEnumerable(Of T))
  fullName: TinkState.Observable.List<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: TinkState.Observable.List(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Observable.List<T>(IEnumerable<T>)
  nameWithType.vb: Observable.List(Of T)(IEnumerable(Of T))
- uid: TinkState.Observable.Scheduler
  name: Scheduler
  href: api/TinkState.Observable.html#TinkState_Observable_Scheduler
  commentId: F:TinkState.Observable.Scheduler
  fullName: TinkState.Observable.Scheduler
  nameWithType: Observable.Scheduler
- uid: TinkState.Observable.State*
  name: State
  href: api/TinkState.Observable.html#TinkState_Observable_State_
  commentId: Overload:TinkState.Observable.State
  isSpec: "True"
  fullName: TinkState.Observable.State
  nameWithType: Observable.State
- uid: TinkState.Observable.State``1(``0,System.Collections.Generic.IEqualityComparer{``0})
  name: State<T>(T, IEqualityComparer<T>)
  href: api/TinkState.Observable.html#TinkState_Observable_State__1___0_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:TinkState.Observable.State``1(``0,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: State(Of T)(T, IEqualityComparer(Of T))
  fullName: TinkState.Observable.State<T>(T, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: TinkState.Observable.State(Of T)(T, System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Observable.State<T>(T, IEqualityComparer<T>)
  nameWithType.vb: Observable.State(Of T)(T, IEqualityComparer(Of T))
- uid: TinkState.Observable`1
  name: Observable<T>
  href: api/TinkState.Observable-1.html
  commentId: T:TinkState.Observable`1
  name.vb: Observable(Of T)
  fullName: TinkState.Observable<T>
  fullName.vb: TinkState.Observable(Of T)
  nameWithType: Observable<T>
  nameWithType.vb: Observable(Of T)
- uid: TinkState.Observable`1.Bind(System.Action{`0},System.Collections.Generic.IEqualityComparer{`0},TinkState.Scheduler)
  name: Bind(Action<T>, IEqualityComparer<T>, Scheduler)
  href: api/TinkState.Observable-1.html#TinkState_Observable_1_Bind_System_Action__0__System_Collections_Generic_IEqualityComparer__0__TinkState_Scheduler_
  commentId: M:TinkState.Observable`1.Bind(System.Action{`0},System.Collections.Generic.IEqualityComparer{`0},TinkState.Scheduler)
  name.vb: Bind(Action(Of T), IEqualityComparer(Of T), Scheduler)
  fullName: TinkState.Observable<T>.Bind(System.Action<T>, System.Collections.Generic.IEqualityComparer<T>, TinkState.Scheduler)
  fullName.vb: TinkState.Observable(Of T).Bind(System.Action(Of T), System.Collections.Generic.IEqualityComparer(Of T), TinkState.Scheduler)
  nameWithType: Observable<T>.Bind(Action<T>, IEqualityComparer<T>, Scheduler)
  nameWithType.vb: Observable(Of T).Bind(Action(Of T), IEqualityComparer(Of T), Scheduler)
- uid: TinkState.Observable`1.Bind*
  name: Bind
  href: api/TinkState.Observable-1.html#TinkState_Observable_1_Bind_
  commentId: Overload:TinkState.Observable`1.Bind
  isSpec: "True"
  fullName: TinkState.Observable<T>.Bind
  fullName.vb: TinkState.Observable(Of T).Bind
  nameWithType: Observable<T>.Bind
  nameWithType.vb: Observable(Of T).Bind
- uid: TinkState.Observable`1.Map*
  name: Map
  href: api/TinkState.Observable-1.html#TinkState_Observable_1_Map_
  commentId: Overload:TinkState.Observable`1.Map
  isSpec: "True"
  fullName: TinkState.Observable<T>.Map
  fullName.vb: TinkState.Observable(Of T).Map
  nameWithType: Observable<T>.Map
  nameWithType.vb: Observable(Of T).Map
- uid: TinkState.Observable`1.Map``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Map<TOut>(Func<T, TOut>, IEqualityComparer<TOut>)
  href: api/TinkState.Observable-1.html#TinkState_Observable_1_Map__1_System_Func__0___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:TinkState.Observable`1.Map``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Map(Of TOut)(Func(Of T, TOut), IEqualityComparer(Of TOut))
  fullName: TinkState.Observable<T>.Map<TOut>(System.Func<T, TOut>, System.Collections.Generic.IEqualityComparer<TOut>)
  fullName.vb: TinkState.Observable(Of T).Map(Of TOut)(System.Func(Of T, TOut), System.Collections.Generic.IEqualityComparer(Of TOut))
  nameWithType: Observable<T>.Map<TOut>(Func<T, TOut>, IEqualityComparer<TOut>)
  nameWithType.vb: Observable(Of T).Map(Of TOut)(Func(Of T, TOut), IEqualityComparer(Of TOut))
- uid: TinkState.Observable`1.Value
  name: Value
  href: api/TinkState.Observable-1.html#TinkState_Observable_1_Value
  commentId: P:TinkState.Observable`1.Value
  fullName: TinkState.Observable<T>.Value
  fullName.vb: TinkState.Observable(Of T).Value
  nameWithType: Observable<T>.Value
  nameWithType.vb: Observable(Of T).Value
- uid: TinkState.Observable`1.Value*
  name: Value
  href: api/TinkState.Observable-1.html#TinkState_Observable_1_Value_
  commentId: Overload:TinkState.Observable`1.Value
  isSpec: "True"
  fullName: TinkState.Observable<T>.Value
  fullName.vb: TinkState.Observable(Of T).Value
  nameWithType: Observable<T>.Value
  nameWithType.vb: Observable(Of T).Value
- uid: TinkState.ObservableDictionary`2
  name: ObservableDictionary<TKey, TValue>
  href: api/TinkState.ObservableDictionary-2.html
  commentId: T:TinkState.ObservableDictionary`2
  name.vb: ObservableDictionary(Of TKey, TValue)
  fullName: TinkState.ObservableDictionary<TKey, TValue>
  fullName.vb: TinkState.ObservableDictionary(Of TKey, TValue)
  nameWithType: ObservableDictionary<TKey, TValue>
  nameWithType.vb: ObservableDictionary(Of TKey, TValue)
- uid: TinkState.ObservableList`1
  name: ObservableList<T>
  href: api/TinkState.ObservableList-1.html
  commentId: T:TinkState.ObservableList`1
  name.vb: ObservableList(Of T)
  fullName: TinkState.ObservableList<T>
  fullName.vb: TinkState.ObservableList(Of T)
  nameWithType: ObservableList<T>
  nameWithType.vb: ObservableList(Of T)
- uid: TinkState.Schedulable
  name: Schedulable
  href: api/TinkState.Schedulable.html
  commentId: T:TinkState.Schedulable
  fullName: TinkState.Schedulable
  nameWithType: Schedulable
- uid: TinkState.Schedulable.Run
  name: Run()
  href: api/TinkState.Schedulable.html#TinkState_Schedulable_Run
  commentId: M:TinkState.Schedulable.Run
  fullName: TinkState.Schedulable.Run()
  nameWithType: Schedulable.Run()
- uid: TinkState.Schedulable.Run*
  name: Run
  href: api/TinkState.Schedulable.html#TinkState_Schedulable_Run_
  commentId: Overload:TinkState.Schedulable.Run
  isSpec: "True"
  fullName: TinkState.Schedulable.Run
  nameWithType: Schedulable.Run
- uid: TinkState.Scheduler
  name: Scheduler
  href: api/TinkState.Scheduler.html
  commentId: T:TinkState.Scheduler
  fullName: TinkState.Scheduler
  nameWithType: Scheduler
- uid: TinkState.Scheduler.Direct
  name: Direct
  href: api/TinkState.Scheduler.html#TinkState_Scheduler_Direct
  commentId: F:TinkState.Scheduler.Direct
  fullName: TinkState.Scheduler.Direct
  nameWithType: Scheduler.Direct
- uid: TinkState.Scheduler.Schedule(TinkState.Schedulable)
  name: Schedule(Schedulable)
  href: api/TinkState.Scheduler.html#TinkState_Scheduler_Schedule_TinkState_Schedulable_
  commentId: M:TinkState.Scheduler.Schedule(TinkState.Schedulable)
  fullName: TinkState.Scheduler.Schedule(TinkState.Schedulable)
  nameWithType: Scheduler.Schedule(Schedulable)
- uid: TinkState.Scheduler.Schedule*
  name: Schedule
  href: api/TinkState.Scheduler.html#TinkState_Scheduler_Schedule_
  commentId: Overload:TinkState.Scheduler.Schedule
  isSpec: "True"
  fullName: TinkState.Scheduler.Schedule
  nameWithType: Scheduler.Schedule
- uid: TinkState.State`1
  name: State<T>
  href: api/TinkState.State-1.html
  commentId: T:TinkState.State`1
  name.vb: State(Of T)
  fullName: TinkState.State<T>
  fullName.vb: TinkState.State(Of T)
  nameWithType: State<T>
  nameWithType.vb: State(Of T)
- uid: TinkState.State`1.Value
  name: Value
  href: api/TinkState.State-1.html#TinkState_State_1_Value
  commentId: P:TinkState.State`1.Value
  fullName: TinkState.State<T>.Value
  fullName.vb: TinkState.State(Of T).Value
  nameWithType: State<T>.Value
  nameWithType.vb: State(Of T).Value
- uid: TinkState.State`1.Value*
  name: Value
  href: api/TinkState.State-1.html#TinkState_State_1_Value_
  commentId: Overload:TinkState.State`1.Value
  isSpec: "True"
  fullName: TinkState.State<T>.Value
  fullName.vb: TinkState.State(Of T).Value
  nameWithType: State<T>.Value
  nameWithType.vb: State(Of T).Value
